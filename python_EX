'''#Recursion:- Sum of multiplication
def multi_sum(n):
    total = 0
    for i in range(1,11):
       total+=n*i 
    return total'''


''' Prime number function
def check_prime(n):
   prime = 0
   for i in range(100):
      if n%i==0:
         continue
      else:
         prime = n '''


def my_func(msg):
   def fun():
      return msg +" "+"world"
   return fun

t = my_func('Hi') #1.)In the closure function if the return result does not have open paranthesis in it like above example then
k = my_func('Hello')#2.) we can store it in a variable and that remembers this function and eventually it behaves like a function with 
print(t()) #3.)having the argument the variable stored like in the line 24 and call as you can see in line 26



